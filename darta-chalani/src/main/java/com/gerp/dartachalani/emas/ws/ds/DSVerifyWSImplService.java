package com.gerp.dartachalani.emas.ws.ds;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.3.0
 * 2021-09-13T14:32:57.669+05:45
 * Generated source version: 3.3.0
 *
 */
@WebServiceClient(name = "DSVerifyWSImplService",
                  wsdlLocation = "classpath:verify.wsdl",
                  targetNamespace = "http://ds.ws.emas/")
public class DSVerifyWSImplService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://ds.ws.emas/", "DSVerifyWSImplService");
    public final static QName DSVerifyWSImplPort = new QName("http://ds.ws.emas/", "DSVerifyWSImplPort");
    static {
        URL url = DSVerifyWSImplService.class.getClassLoader().getResource("verify.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(DSVerifyWSImplService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "classpath:verify.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public DSVerifyWSImplService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public DSVerifyWSImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DSVerifyWSImplService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public DSVerifyWSImplService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public DSVerifyWSImplService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public DSVerifyWSImplService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns DSVerifyWS
     */
    @WebEndpoint(name = "DSVerifyWSImplPort")
    public DSVerifyWS getDSVerifyWSImplPort() {
        return super.getPort(DSVerifyWSImplPort, DSVerifyWS.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DSVerifyWS
     */
    @WebEndpoint(name = "DSVerifyWSImplPort")
    public DSVerifyWS getDSVerifyWSImplPort(WebServiceFeature... features) {
        return super.getPort(DSVerifyWSImplPort, DSVerifyWS.class, features);
    }

}
